#!/bin/bash
# shellcheck disable=SC2154
# (silence shellcheck wrt $cam1 environment variable)

if [[ $# -lt 4 ]];  then  echo "Format: [narrow=1] [cam1=1] $0 width height framerate ms [us]"; exit;  fi
if [[ "$(( $1 % 2 ))" -eq 1 ]];  then echo "width has to be even"; exit;  fi
if [[ "$(( $2 % 2 ))" -eq 1 ]];  then echo "height has to be even"; exit;  fi

export SHTR=""; if [[ $# -gt 4 ]]; then SHTR="--shutter"; fi
export workaround=""; if [[ "" != "$(grep '=bookworm' /etc/os-release)" ]]; then workaround="--no-raw"; fi
export d=10; if [[ "" != "$(grep "Revision.*: ...17.$" /proc/cpuinfo)" ]]; then if [[ "$cam1" == "" ]]; then d=10; else d=11; fi; fi

# ENHANCEMENT: Dynamic device detection with unlimited scalability
# Get all available media devices dynamically (no hardcoded limits)
MEDIA_DEVICES=($(ls /dev/media* 2>/dev/null | sort -V))

if [ ${#MEDIA_DEVICES[@]} -eq 0 ]; then
    echo "ERROR: No media devices found in /dev/media*" >&2
    exit 1
fi

echo "Found ${#MEDIA_DEVICES[@]} media device(s): ${MEDIA_DEVICES[*]}" >&2

# Try to configure each available media device
CONFIGURED=false
for media_dev in "${MEDIA_DEVICES[@]}"; do
    echo "Trying media device $media_dev" >&2
    media-ctl -d "$media_dev" --set-v4l2 "'imx296 $d-001a':0 [fmt:SBGGR10_1X10/${1}x${2} crop:($(( (1440 - $1) / 2 )),$(( (1088 - $2) / 2 )))/${1}x$2]" -v
    if [ $? -eq 0 ]; then
        echo "Successfully configured media device: $media_dev" >&2
        CONFIGURED=true
        break
    else
        echo "Failed to configure $media_dev, trying next..." >&2
    fi
done

if [ "$CONFIGURED" = false ]; then
    echo "ERROR: Could not configure any media device" >&2
    exit 1
fi

libcamera-hello --list-cameras ; echo
rm -f /dev/shm/tst.pts

if [[ "" != "$(grep "Revision.*: ...17.$" /proc/cpuinfo)" ]]
then
  rpicam-vid "$workaround" ${cam1:+--camera 1} --width "$1" --height "$2" --denoise cdn_off --framerate "$3" -t "$4" "$SHTR" "$5" -o /dev/shm/tst${cam1:+1}.mp4 -n ; echo 
  ~/venv/bin/python ~/rpicam-apps/utils/timestamp.py --plot ${narrow:+--narrow} /dev/shm/tst${cam1:+1}.mp4
else
  libcamera-vid "$workaround" --width "$1" --height "$2" --denoise cdn_off --framerate "$3" --save-pts /dev/shm/tst.pts -t "$4" "$SHTR" "$5" -o /dev/shm/tst.h264 -n ; echo 
  rm -f tstamps.csv && ptsanalyze /dev/shm/tst.pts
fi
